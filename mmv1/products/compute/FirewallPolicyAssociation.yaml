# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'FirewallPolicyAssociation'
kind: 'compute#firewallPolicyAssociation'
base_url: '{{firewall_policy}}'
id_format: '{{firewall_policy}}/associations/{{name}}'
self_link: '{{firewall_policy}}/getAssociation?name={{name}}'
create_url: '{{firewall_policy}}/addAssociation'
delete_verb: :POST
delete_url: '{{firewall_policy}}/removeAssociation?name={{name}}'
import_format: [
  'locations/global/firewallPolicies/{{firewall_policy}}/associations/{{name}}',
  '{{firewall_policy}}/{{name}}'
]
immutable: true
description: |
  Allows associating hierarchical firewall policies with the target where they are applied. This allows creating policies and rules in a different location than they are applied.
  For more information on applying hierarchical firewall policies see the [official documentation](https://cloud.google.com/firewall/docs/firewall-policies#managing_hierarchical_firewall_policy_resources)
references: !ruby/object:Api::Resource::ReferenceLinks
  api: 'https://cloud.google.com/compute/docs/reference/rest/v1/firewallPolicies/addAssociation'
timeouts: !ruby/object:Api::Timeouts
  insert_minutes: 20
  delete_minutes: 20
custom_diff:
  - 'tpgresource.DefaultProviderProject'
custom_code: !ruby/object:Provider::Terraform::CustomCode
  post_create: 'templates/terraform/constants/compute_firewall_policy_association_operation.go.erb'
  post_delete: 'templates/terraform/constants/compute_firewall_policy_association_operation.go.erb'
  custom_import: 'templates/terraform/constants/firewall_policy_association_import.go.erb'
  test_check_destroy: 'templates/terraform/custom_check_destroy/skip_delete_during_test.go.erb'
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'firewall_policy_association'
    primary_resource_id: 'default'
    skip_test: true
    vars:
      policy_name: 'my-policy'
      association_name: 'my-association'
      folder_name: 'my-folder'
    test_env_vars:
      org_id: :ORG_ID
parameters:
  - !ruby/object:Api::Type::ResourceRef
    name: 'firewallPolicy'
    resource: 'FirewallPolicy'
    imports: 'name'
    description: |
      The firewall policy ID of the association.
    required: true
    immutable: true
    url_param_only: true
    diff_suppress_func: 'tpgresource.CompareSelfLinkOrResourceName'
    custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
    custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    required: true
    immutable: true
    description: |
      The name for an association.
  - !ruby/object:Api::Type::String
    name: 'attachmentTarget'
    required: true
    immutable: true
    description: |
      The target that the firewall policy is attached to.
    diff_suppress_func: 'tpgresource.CompareSelfLinkOrResourceName'
  - !ruby/object:Api::Type::String
    name: 'shortName'
    output: true
    immutable: true
    description: |
      The short name of the firewall policy of the association.
