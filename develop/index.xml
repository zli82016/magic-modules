<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Develop on Magic Modules</title><link>https://googlecloudplatform.github.io/magic-modules/develop/</link><description>Recent content in Develop on Magic Modules</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://googlecloudplatform.github.io/magic-modules/develop/index.xml" rel="self" type="application/rss+xml"/><item><title>Add or modify a resource</title><link>https://googlecloudplatform.github.io/magic-modules/develop/resource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/resource/</guid><description>&lt;h1 id="add-or-modify-a-resource">
 Add or modify a resource
 &lt;a class="anchor" href="#add-or-modify-a-resource">#&lt;/a>
&lt;/h1>
&lt;p>This page describes how to add a new resource to the &lt;code>google&lt;/code> or &lt;code>google-beta&lt;/code> Terraform provider using MMv1 and/or handwritten code.&lt;/p>
&lt;p>For more information about types of resources and the generation process overall, see &lt;a href="https://googlecloudplatform.github.io/magic-modules/get-started/how-magic-modules-works/">How Magic Modules works&lt;/a>.&lt;/p>
&lt;h2 id="before-you-begin">
 Before you begin
 &lt;a class="anchor" href="#before-you-begin">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>Complete the &lt;a href="https://googlecloudplatform.github.io/magic-modules/get-started/generate-providers/">Generate the providers&lt;/a> quickstart to set up your environment and your Google Cloud project.&lt;/li>
&lt;li>Ensure that your &lt;code>magic-modules&lt;/code>, &lt;code>terraform-provider-google&lt;/code>, and &lt;code>terraform-provider-google-beta&lt;/code> repositories are up to date.
&lt;pre tabindex="0">&lt;code>cd ~/magic-modules
git checkout main &amp;amp;&amp;amp; git clean -f . &amp;amp;&amp;amp; git checkout -- . &amp;amp;&amp;amp; git pull
cd $GOPATH/src/github.com/hashicorp/terraform-provider-google
git checkout main &amp;amp;&amp;amp; git clean -f . &amp;amp;&amp;amp; git checkout -- . &amp;amp;&amp;amp; git pull
cd $GOPATH/src/github.com/hashicorp/terraform-provider-google-beta
git checkout main &amp;amp;&amp;amp; git clean -f . &amp;amp;&amp;amp; git checkout -- . &amp;amp;&amp;amp; git pull
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ol>
&lt;h2 id="add-a-resource">
 Add a resource
 &lt;a class="anchor" href="#add-a-resource">#&lt;/a>
&lt;/h2>




&lt;div class="book-tabs">&lt;input type="radio" class="toggle" name="tabs-resource" id="tabs-resource-0" checked="checked" />
 &lt;label for="tabs-resource-0">MMv1&lt;/label>
 &lt;div class="book-tabs-content markdown-inner">&lt;ol>
&lt;li>
&lt;p>Using an editor of your choice, in the appropriate &lt;a href="https://googlecloudplatform.github.io/magic-modules/get-started/how-magic-modules-works/#mmv1">product folder&lt;/a>, create a file called &lt;code>RESOURCE_NAME.yaml&lt;/code>. Replace &lt;code>RESOURCE_NAME&lt;/code> with the name of the API resource you are adding support for. For example, a configuration file for &lt;a href="https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances.natAddresses">NatAddress&lt;/a> would be called &lt;code>NatAddress.yaml&lt;/code>.&lt;/p></description></item><item><title>MMv1 field reference</title><link>https://googlecloudplatform.github.io/magic-modules/develop/field-reference/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/field-reference/</guid><description>&lt;h1 id="mmv1-field-reference">
 MMv1 field reference
 &lt;a class="anchor" href="#mmv1-field-reference">#&lt;/a>
&lt;/h1>
&lt;p>This page documents commonly-used properties for fields. For a full list of
available properties, see &lt;a href="https://github.com/GoogleCloudPlatform/magic-modules/blob/main/mmv1/api/type.go">type.go ↗&lt;/a>.&lt;/p>
&lt;h2 id="shared-properties">
 Shared properties
 &lt;a class="anchor" href="#shared-properties">#&lt;/a>
&lt;/h2>
&lt;h3 id="min_version-beta">
 &lt;code>min_version: beta&lt;/code>
 &lt;a class="anchor" href="#min_version-beta">#&lt;/a>
&lt;/h3>
&lt;p>Marks the field (and any subfields) as beta-only. Ensure a beta version block
is present in provider.yaml. Do not use if an ancestor field (or the overall
resource) is already marked as beta-only.&lt;/p>
&lt;h3 id="immutable">
 &lt;code>immutable&lt;/code>
 &lt;a class="anchor" href="#immutable">#&lt;/a>
&lt;/h3>
&lt;p>If true, the field (and any subfields) are considered immutable - that is,
only settable on create. If unset or false, the field is still considered
immutable if any ancestor field (or the overall resource) is immutable,
unless &lt;code>update_url&lt;/code> is set.&lt;/p></description></item><item><title>MMv1 resource reference</title><link>https://googlecloudplatform.github.io/magic-modules/develop/resource-reference/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/resource-reference/</guid><description>&lt;h1 id="mmv1-resource-reference">
 MMv1 resource reference
 &lt;a class="anchor" href="#mmv1-resource-reference">#&lt;/a>
&lt;/h1>
&lt;p>This page documents commonly-used properties for resources. For a full list of
available properties, see &lt;a href="https://github.com/GoogleCloudPlatform/magic-modules/blob/main/mmv1/api/resource.go">resource.go ↗&lt;/a>.&lt;/p>
&lt;h2 id="basic">
 Basic
 &lt;a class="anchor" href="#basic">#&lt;/a>
&lt;/h2>
&lt;h3 id="name">
 &lt;code>name&lt;/code>
 &lt;a class="anchor" href="#name">#&lt;/a>
&lt;/h3>
&lt;p>API resource name.&lt;/p>
&lt;h3 id="description">
 &lt;code>description&lt;/code>
 &lt;a class="anchor" href="#description">#&lt;/a>
&lt;/h3>
&lt;p>Resource description. Used in documentation.&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">description&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> This is a multi-line description
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> of a resource. All multi-line descriptions must follow
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> this format of using a vertical bar followed by a line-break,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> with the remaining description being indented.&lt;/span> 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="references">
 &lt;code>references&lt;/code>
 &lt;a class="anchor" href="#references">#&lt;/a>
&lt;/h3>
&lt;p>Links to reference documentation for a resource. Contains two attributes:&lt;/p></description></item><item><title>Add custom resource code</title><link>https://googlecloudplatform.github.io/magic-modules/develop/custom-code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/custom-code/</guid><description>&lt;h1 id="add-custom-resource-code">
 Add custom resource code
 &lt;a class="anchor" href="#add-custom-resource-code">#&lt;/a>
&lt;/h1>
&lt;p>This document covers how to add &amp;ldquo;custom code&amp;rdquo; to &lt;a href="https://googlecloudplatform.github.io/magic-modules/get-started/how-magic-modules-works/#mmv1">MMv1 resources&lt;/a>. Custom code can be used to add arbitrary logic to a resource while still generating most of the code; it allows for a balance between maintainability and supporting real-worlds APIs that deviate from what MMv1 can support. Custom code should only be added if the desired behavior can&amp;rsquo;t be achieved otherwise.&lt;/p>
&lt;p>Most custom code attributes are strings that contain a path to a template file relative to the &lt;code>mmv1&lt;/code> directory. For example:&lt;/p></description></item><item><title>Add a datasource</title><link>https://googlecloudplatform.github.io/magic-modules/develop/add-handwritten-datasource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/add-handwritten-datasource/</guid><description>Datasources are like terraform resources except they don&amp;rsquo;t &lt;em>create&lt;/em> anything.</description></item><item><title>Promote to GA</title><link>https://googlecloudplatform.github.io/magic-modules/develop/promote-to-ga/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/promote-to-ga/</guid><description>&lt;h1 id="promote-from-beta-to-ga">
 Promote from beta to GA
 &lt;a class="anchor" href="#promote-from-beta-to-ga">#&lt;/a>
&lt;/h1>
&lt;p>This document describes how to promote an existing resource or field that uses MMv1 and/or handwritten code from the &lt;code>google-beta&lt;/code> provider to the &lt;code>google&lt;/code> (also known as &amp;ldquo;GA&amp;rdquo;) provider.&lt;/p>
&lt;p>Handwritten code (including &lt;code>custom_code&lt;/code>) commonly uses &amp;ldquo;version guards&amp;rdquo; in the form of &lt;code>{{- if ne $.TargetVersionName &amp;quot;ga&amp;quot; }}...{{- end }}&lt;/code> to wrap code that is beta-specific, which need to be removed during promotion.&lt;/p>
&lt;p>For more information about types of resources and the generation process overall, see &lt;a href="https://googlecloudplatform.github.io/magic-modules/get-started/how-magic-modules-works/">How Magic Modules works&lt;/a>.&lt;/p></description></item><item><title>Fix diffs</title><link>https://googlecloudplatform.github.io/magic-modules/develop/diffs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/diffs/</guid><description>&lt;h1 id="fix-diffs">
 Fix diffs
 &lt;a class="anchor" href="#fix-diffs">#&lt;/a>
&lt;/h1>
&lt;p>This page outlines best practices for fixing various kinds of diffs that can show up at plan time. These will often show up as test failures with the text: &lt;code>After applying this test step, the plan was not empty.&lt;/code>. They can also show up for users at plan time, on fields that a user has not modified in their configuration. If the diff does not go away even after running &lt;code>terraform apply&lt;/code> more than once with the same configuration, the diff is called a &amp;ldquo;permadiff&amp;rdquo;.&lt;/p></description></item><item><title>Handwritten docs style guide</title><link>https://googlecloudplatform.github.io/magic-modules/develop/handwritten-docs-style-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/handwritten-docs-style-guide/</guid><description>&lt;h1 id="handwritten-documentation-style-guide">
 Handwritten documentation style guide
 &lt;a class="anchor" href="#handwritten-documentation-style-guide">#&lt;/a>
&lt;/h1>
&lt;p>This document describes the style guide for handwritten documentation for resources and data sources. MMv1-based resources will automatically generate documentation that matches this style guide.&lt;/p>
&lt;h2 id="file-name-and-location">
 File name and location
 &lt;a class="anchor" href="#file-name-and-location">#&lt;/a>
&lt;/h2>
&lt;p>Handwritten documentation lives in:&lt;/p>
&lt;ul>
&lt;li>Data sources: &lt;a href="https://github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/third_party/terraform/website/docs/d">&lt;code>magic-modules/third_party/terraform/website/docs/d/&lt;/code>&lt;/a>&lt;/li>
&lt;li>Resources: &lt;a href="https://github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/third_party/terraform/website/docs/r">&lt;code>magic-modules/third_party/terraform/website/docs/r/&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>The name of the file is the name of the resource without a &lt;code>google_&lt;/code> prefix. For example, for &lt;code>google_compute_instance&lt;/code>, the file is called &lt;code>compute_instance.html.markdown&lt;/code>&lt;/p>
&lt;h2 id="yaml-frontmatter">
 YAML frontmatter
 &lt;a class="anchor" href="#yaml-frontmatter">#&lt;/a>
&lt;/h2>
&lt;p>Every resource or datasource documentation page must include YAML frontmatter which sets &lt;code>subcategory&lt;/code> (where the page will be displayed in the left sidebar).&lt;/p></description></item><item><title>Update dependencies</title><link>https://googlecloudplatform.github.io/magic-modules/develop/update-dependencies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/update-dependencies/</guid><description>&lt;h1 id="update-provider-dependencies">
 Update provider dependencies
 &lt;a class="anchor" href="#update-provider-dependencies">#&lt;/a>
&lt;/h1>
&lt;p>The Magic Modules repository does not contain a complete Go module, preventing the use of automated tooling like &lt;code>go get&lt;/code> from that repository. To add or update provider dependencies, use standard Go tooling to update the dependency in the &lt;code>terraform-provider-google&lt;/code> provider and copy the results to the upstream files in Magic Modules.&lt;/p>
&lt;p>Below are the steps you can follow to make the change:&lt;/p>
&lt;ol>
&lt;li>Navigate to the local &lt;code>google&lt;/code> provider directory:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd $GOPATH/src/github.com/hashicorp/terraform-provider-google
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Open the &lt;a href="https://github.com/hashicorp/terraform-provider-google/blob/main/go.mod">&lt;code>go.mod&lt;/code>&lt;/a> file and add the new entries or modify the versions of existing entries as needed&lt;/li>
&lt;li>Update dependencies using either of the following methods
&lt;ul>
&lt;li>run the following commands to update all dependencies:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>go get
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>go mod tidy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Alternatively, update a specific package to a desired version:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>go get google.golang.org/api@v0.105.0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>go mod tidy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Copy the contents of the updated &lt;code>go.mod&lt;/code> and &lt;code>go.sum&lt;/code> file into &lt;a href="https://github.com/GoogleCloudPlatform/magic-modules/blob/main/mmv1/third_party/terraform/go.mod.erb">&lt;code>mmv1/third_party/terraform/go.mod&lt;/code>&lt;/a> and &lt;a href="https://github.com/GoogleCloudPlatform/magic-modules/blob/main/mmv1/third_party/terraform/go.sum">&lt;code>mmv1/third_party/terraform/go.sum&lt;/code>&lt;/a> in the &lt;code>magic-modules&lt;/code> respectively.&lt;/li>
&lt;li>Create a pull request containing &lt;em>only&lt;/em> the dependency changes.&lt;/li>
&lt;li>Resolve any errors caused by the dependency upgrade.&lt;/li>
&lt;li>After the dependency pull request is merged, continue with a separate pull request for any additional changes that were blocked by the upgrade.&lt;/li>
&lt;/ol></description></item><item><title>Client-side fields</title><link>https://googlecloudplatform.github.io/magic-modules/develop/client-side-fields/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/client-side-fields/</guid><description>&lt;h1 id="client-side-fields">
 Client-side fields
 &lt;a class="anchor" href="#client-side-fields">#&lt;/a>
&lt;/h1>
&lt;p>Client-side fields are most often used as flags to modify the behavior of a Terraform resource. Because they don&amp;rsquo;t correspond to an API field, there are some additional considerations in terms of how to implement them.&lt;/p>
&lt;p>Common client-side fields include:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://googlecloudplatform.github.io/magic-modules/best-practices/#deletion_protection">&lt;code>deletion_protection&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://googlecloudplatform.github.io/magic-modules/best-practices/#deletion_policy">&lt;code>deletion_policy&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>




&lt;div class="book-tabs">&lt;input type="radio" class="toggle" name="tabs-schema" id="tabs-schema-0" checked="checked" />
 &lt;label for="tabs-schema-0">MMv1&lt;/label>
 &lt;div class="book-tabs-content markdown-inner">&lt;h2 id="add-to-the-schema">
 Add to the schema
 &lt;a class="anchor" href="#add-to-the-schema">#&lt;/a>
&lt;/h2>
&lt;p>Instead of adding the field in &lt;code>parameters&lt;/code> or &lt;code>properties&lt;/code>, use a section called &lt;code>virtual_fields&lt;/code>.&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">virtual_fields&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;deletion_protection&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">Boolean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">default_value&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">description&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Whether Terraform will be prevented from destroying the CertificateAuthority.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> When the field is set to true or unset in Terraform state, a `terraform apply`
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> or `terraform destroy` that would delete the CertificateAuthority will fail.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> When the field is set to false, deleting the CertificateAuthority is allowed.&lt;/span> 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will automatically ensure that the field works as users expect.&lt;/p></description></item></channel></rss>