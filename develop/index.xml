<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Develop on Magic Modules</title><link>https://googlecloudplatform.github.io/magic-modules/develop/</link><description>Recent content in Develop on Magic Modules</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://googlecloudplatform.github.io/magic-modules/develop/index.xml" rel="self" type="application/rss+xml"/><item><title>Add or modify a resource</title><link>https://googlecloudplatform.github.io/magic-modules/develop/resource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/resource/</guid><description>Add or modify a resource # This page describes how to add a new resource to the google or google-beta Terraform provider using MMv1 and/or handwritten code.
For more information about types of resources and the generation process overall, see How Magic Modules works.
Before you begin # Complete the Generate the providers quickstart to set up your environment and your Google Cloud project. Ensure that your magic-modules, terraform-provider-google, and terraform-provider-google-beta repositories are up to date.</description></item><item><title>MMv1 field reference</title><link>https://googlecloudplatform.github.io/magic-modules/develop/field-reference/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/field-reference/</guid><description>MMv1 field reference # This page documents commonly-used properties for fields. For a full list of available properties, see type.rb â†—.
Shared properties # min_version: beta # Marks the field (and any subfields) as beta-only. Ensure a beta version block is present in provider.yaml. Do not use if an ancestor field (or the overall resource) is already marked as beta-only.
immutable # If true, the field (and any subfields) are considered immutable - that is, only settable on create.</description></item><item><title>Add custom resource code</title><link>https://googlecloudplatform.github.io/magic-modules/develop/custom-code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/custom-code/</guid><description>Add custom resource code # This document covers how to add &amp;ldquo;custom code&amp;rdquo; to MMv1 resources. Custom code can be used to add arbitrary logic to a resource while still generating most of the code; it allows for a balance between maintainability and supporting real-worlds APIs that deviate from what MMv1 can support. Custom code should only be added if the desired behavior can&amp;rsquo;t be achieved otherwise.
Most custom code attributes are strings that contain a path to a template file relative to the mmv1 directory.</description></item><item><title>Add a datasource</title><link>https://googlecloudplatform.github.io/magic-modules/develop/add-handwritten-datasource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/add-handwritten-datasource/</guid><description>Datasources are like terraform resources except they don&amp;rsquo;t &lt;em>create&lt;/em> anything.</description></item><item><title>Promote to GA</title><link>https://googlecloudplatform.github.io/magic-modules/develop/promote-to-ga/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/promote-to-ga/</guid><description>Promote from beta to GA # This document describes how to promote an existing resource or field that uses MMv1 and/or handwritten code from the google-beta provider to the google (also known as &amp;ldquo;GA&amp;rdquo;) provider.
Handwritten code (including custom_code) commonly uses &amp;ldquo;version guards&amp;rdquo; in the form of &amp;lt;% unless version == 'ga' -%&amp;gt;...&amp;lt;% end -%&amp;gt; to wrap code that is beta-specific, which need to be removed during promotion.
For more information about types of resources and the generation process overall, see How Magic Modules works.</description></item><item><title>Fix a permadiff</title><link>https://googlecloudplatform.github.io/magic-modules/develop/permadiff/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/permadiff/</guid><description>Fix a permadiff # Permadiffs are an extremely common class of errors that users experience. They manifest as diffs at plan time on fields that a user has not modified in their configuration. They can also show up as test failures with the error message: &amp;ldquo;After applying this test step, the plan was not empty.&amp;rdquo;
In a general sense, permadiffs are caused by the API returning a different value for the field than what the user sent, which causes Terraform to try to re-send the same request, which gets the same response, which continues to result in the user seeing a diff.</description></item><item><title>Handwritten docs style guide</title><link>https://googlecloudplatform.github.io/magic-modules/develop/handwritten-docs-style-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/handwritten-docs-style-guide/</guid><description>Handwritten documentation style guide # This document describes the style guide for handwritten documentation for resources and data sources. MMv1-based resources will automatically generate documentation that matches this style guide.
File name and location # Handwritten documentation lives in:
Data sources: magic-modules/third_party/terraform/website/docs/d/ Resources: magic-modules/third_party/terraform/website/docs/r/ The name of the file is the name of the resource without a google_ prefix. For example, for google_compute_instance, the file is called compute_instance.html.markdown
YAML frontmatter # Every resource or datasource documentation page must include YAML frontmatter which sets subcategory (where the page will be displayed in the left sidebar).</description></item></channel></rss>